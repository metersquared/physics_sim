import numpy as np
from physics_sim.system import System
from physics_sim.field import Field  # Assuming Field is defined in field.py

from typing import List


class Body:
    """A class representing a physical body in the simulation."""

    def __init__(
        self,
        dim: int,
        system: System = None,
        mass: float = 0.0,
        charge: float = 0.0,
        x=None,
        v=None,
        fields: List[Field] = None,
    ):
        """Initialize a physical body in the simulation.

        Parameters
        ----------
        system : System
            The system to which this body belongs.
        dim : int
            The dimensionality of the body (e.g., 2 for 2D, 3 for 3D).
        mass : float, optional
            The mass of the body, by default 0.0
        charge : float, optional
            The charge of the body, by default 0.0
        x : np.ndarray, optional
            The initial position of the body, by default None
        v : np.ndarray, optional
            The initial velocity of the body, by default None
        fields : List[Field], optional
            A list of fields generated by this body, by default None
        """
        super(Body, self).__init__()
        self.mass = mass
        self.charge = charge
        self.dim = dim
        self.x = x if x is not None else np.zeros(dim)
        self.v = v if v is not None else np.zeros(dim)
        self.fields = fields if fields is not None else []

        self.system = system
        if system is not None:
            system.add_body(self)
